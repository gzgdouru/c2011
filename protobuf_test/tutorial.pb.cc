// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tutorial.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tutorial.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ouru {

namespace {

const ::anjubao::protobuf::Descriptor* ouruTest_descriptor_ = NULL;
const ::anjubao::protobuf::internal::GeneratedMessageReflection*
  ouruTest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tutorial_2eproto() {
  protobuf_AddDesc_tutorial_2eproto();
  const ::anjubao::protobuf::FileDescriptor* file =
    ::anjubao::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tutorial.proto");
  GOOGLE_CHECK(file != NULL);
  ouruTest_descriptor_ = file->message_type(0);
  static const int ouruTest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ouruTest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ouruTest, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ouruTest, email_),
  };
  ouruTest_reflection_ =
    new ::anjubao::protobuf::internal::GeneratedMessageReflection(
      ouruTest_descriptor_,
      ouruTest::default_instance_,
      ouruTest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ouruTest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ouruTest, _unknown_fields_),
      -1,
      ::anjubao::protobuf::DescriptorPool::generated_pool(),
      ::anjubao::protobuf::MessageFactory::generated_factory(),
      sizeof(ouruTest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::anjubao::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tutorial_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::anjubao::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ouruTest_descriptor_, &ouruTest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tutorial_2eproto() {
  delete ouruTest::default_instance_;
  delete ouruTest_reflection_;
}

void protobuf_AddDesc_tutorial_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::anjubao::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016tutorial.proto\022\004ouru\"4\n\010ouruTest\022\014\n\004na"
    "me\030\001 \002(\t\022\013\n\003age\030\002 \002(\005\022\r\n\005email\030\003 \001(\t", 76);
  ::anjubao::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tutorial.proto", &protobuf_RegisterTypes);
  ouruTest::default_instance_ = new ouruTest();
  ouruTest::default_instance_->InitAsDefaultInstance();
  ::anjubao::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tutorial_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tutorial_2eproto {
  StaticDescriptorInitializer_tutorial_2eproto() {
    protobuf_AddDesc_tutorial_2eproto();
  }
} static_descriptor_initializer_tutorial_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ouruTest::kNameFieldNumber;
const int ouruTest::kAgeFieldNumber;
const int ouruTest::kEmailFieldNumber;
#endif  // !_MSC_VER

ouruTest::ouruTest()
  : ::anjubao::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ouru.ouruTest)
}

void ouruTest::InitAsDefaultInstance() {
}

ouruTest::ouruTest(const ouruTest& from)
  : ::anjubao::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ouru.ouruTest)
}

void ouruTest::SharedCtor() {
  ::anjubao::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::anjubao::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = 0;
  email_ = const_cast< ::std::string*>(&::anjubao::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ouruTest::~ouruTest() {
  // @@protoc_insertion_point(destructor:ouru.ouruTest)
  SharedDtor();
}

void ouruTest::SharedDtor() {
  if (name_ != &::anjubao::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (email_ != &::anjubao::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (this != default_instance_) {
  }
}

void ouruTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::anjubao::protobuf::Descriptor* ouruTest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ouruTest_descriptor_;
}

const ouruTest& ouruTest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tutorial_2eproto();
  return *default_instance_;
}

ouruTest* ouruTest::default_instance_ = NULL;

ouruTest* ouruTest::New() const {
  return new ouruTest;
}

void ouruTest::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_name()) {
      if (name_ != &::anjubao::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    age_ = 0;
    if (has_email()) {
      if (email_ != &::anjubao::protobuf::internal::GetEmptyStringAlreadyInited()) {
        email_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ouruTest::MergePartialFromCodedStream(
    ::anjubao::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::anjubao::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ouru.ouruTest)
  for (;;) {
    ::std::pair< ::anjubao::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::anjubao::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::anjubao::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::anjubao::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::anjubao::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_age;
        break;
      }

      // required int32 age = 2;
      case 2: {
        if (tag == 16) {
         parse_age:
          DO_((::anjubao::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::anjubao::protobuf::int32, ::anjubao::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_email;
        break;
      }

      // optional string email = 3;
      case 3: {
        if (tag == 26) {
         parse_email:
          DO_(::anjubao::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::anjubao::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::anjubao::protobuf::internal::WireFormat::PARSE,
            "email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::anjubao::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::anjubao::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::anjubao::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ouru.ouruTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ouru.ouruTest)
  return false;
#undef DO_
}

void ouruTest::SerializeWithCachedSizes(
    ::anjubao::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ouru.ouruTest)
  // required string name = 1;
  if (has_name()) {
    ::anjubao::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::anjubao::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::anjubao::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 age = 2;
  if (has_age()) {
    ::anjubao::protobuf::internal::WireFormatLite::WriteInt32(2, this->age(), output);
  }

  // optional string email = 3;
  if (has_email()) {
    ::anjubao::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::anjubao::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    ::anjubao::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  if (!unknown_fields().empty()) {
    ::anjubao::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ouru.ouruTest)
}

::anjubao::protobuf::uint8* ouruTest::SerializeWithCachedSizesToArray(
    ::anjubao::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ouru.ouruTest)
  // required string name = 1;
  if (has_name()) {
    ::anjubao::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::anjubao::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::anjubao::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 age = 2;
  if (has_age()) {
    target = ::anjubao::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->age(), target);
  }

  // optional string email = 3;
  if (has_email()) {
    ::anjubao::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::anjubao::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    target =
      ::anjubao::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::anjubao::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ouru.ouruTest)
  return target;
}

int ouruTest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::anjubao::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required int32 age = 2;
    if (has_age()) {
      total_size += 1 +
        ::anjubao::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional string email = 3;
    if (has_email()) {
      total_size += 1 +
        ::anjubao::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::anjubao::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ouruTest::MergeFrom(const ::anjubao::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ouruTest* source =
    ::anjubao::protobuf::internal::dynamic_cast_if_available<const ouruTest*>(
      &from);
  if (source == NULL) {
    ::anjubao::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ouruTest::MergeFrom(const ouruTest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_email()) {
      set_email(from.email());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ouruTest::CopyFrom(const ::anjubao::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ouruTest::CopyFrom(const ouruTest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ouruTest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ouruTest::Swap(ouruTest* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(age_, other->age_);
    std::swap(email_, other->email_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::anjubao::protobuf::Metadata ouruTest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::anjubao::protobuf::Metadata metadata;
  metadata.descriptor = ouruTest_descriptor_;
  metadata.reflection = ouruTest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ouru

// @@protoc_insertion_point(global_scope)
